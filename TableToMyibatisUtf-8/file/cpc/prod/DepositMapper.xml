<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="com.neusoft.crm.cpc.prod.mapper.DepositMapper">

  <resultMap id="BaseResultMap" type="com.neusoft.crm.api.cpc.prod.data.DepositDO">
    <id column="DEPOSIT_BALANCE_ID" jdbcType="BIGINT" property="depositBalanceId"/>
    <result column="DEPOSIT_TYPE_ID" jdbcType="INTEGER" property="depositTypeId"/>
    <result column="ACCT_ID" jdbcType="BIGINT" property="acctId"/>
    <result column="PROD_INST_ID" jdbcType="BIGINT" property="prodInstId"/>
    <result column="ORI_AMOUNT" jdbcType="BIGINT" property="oriAmount"/>
    <result column="AMOUNT" jdbcType="BIGINT" property="amount"/>
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
    <result column="ALLOW_PAEY_DATE" jdbcType="TIMESTAMP" property="allowPaeyDate"/>
    <result column="BUREAU_ID" jdbcType="INTEGER" property="bureauId"/>
    <result column="LAN_ID" jdbcType="BIGINT" property="lanId"/>
    <result column="STATUS_CD" jdbcType="INTEGER" property="statusCd"/>
    <result column="STATUS_DATE" jdbcType="TIMESTAMP" property="statusDate"/>
    <result column="EFF_DATE" jdbcType="TIMESTAMP" property="effDate"/>
    <result column="EXP_DATE" jdbcType="TIMESTAMP" property="expDate"/>
  </resultMap>

  <sql id="CommonColumns">
          DEPOSIT_BALANCE_ID, 
          DEPOSIT_TYPE_ID, 
          ACCT_ID, 
          PROD_INST_ID, 
          ORI_AMOUNT, 
          AMOUNT, 
          CREATE_DATE, 
          ALLOW_PAEY_DATE, 
          BUREAU_ID, 
          LAN_ID, 
          STATUS_CD, 
          STATUS_DATE, 
          EFF_DATE, 
          EXP_DATE
  </sql>

  <sql id="CommonColumnsKey">
          DEPOSIT_TYPE_ID, 
          ACCT_ID, 
          PROD_INST_ID, 
          ORI_AMOUNT, 
          AMOUNT, 
          CREATE_DATE, 
          ALLOW_PAEY_DATE, 
          BUREAU_ID, 
          LAN_ID, 
          STATUS_CD, 
          STATUS_DATE, 
          EFF_DATE, 
          EXP_DATE
  </sql>

  <sql id="dynamicAndCondition">
    <where>
      <if test="depositBalanceId != null ">
        DEPOSIT_BALANCE_ID = #{depositBalanceId, jdbcType=BIGINT }
      </if>
      <if test="depositTypeId != null ">
        and DEPOSIT_TYPE_ID = #{depositTypeId, jdbcType=INTEGER }
      </if>
      <if test="acctId != null ">
        and ACCT_ID = #{acctId, jdbcType=BIGINT }
      </if>
      <if test="prodInstId != null ">
        and PROD_INST_ID = #{prodInstId, jdbcType=BIGINT }
      </if>
      <if test="oriAmount != null ">
        and ORI_AMOUNT = #{oriAmount, jdbcType=BIGINT }
      </if>
      <if test="amount != null ">
        and AMOUNT = #{amount, jdbcType=BIGINT }
      </if>
      <if test="createDate != null ">
        and CREATE_DATE = #{createDate, jdbcType=TIMESTAMP }
      </if>
      <if test="allowPaeyDate != null ">
        and ALLOW_PAEY_DATE = #{allowPaeyDate, jdbcType=TIMESTAMP }
      </if>
      <if test="bureauId != null ">
        and BUREAU_ID = #{bureauId, jdbcType=INTEGER }
      </if>
      <if test="lanId != null ">
        and LAN_ID = #{lanId, jdbcType=BIGINT }
      </if>
      <if test="statusCd != null ">
        and STATUS_CD = #{statusCd, jdbcType=INTEGER }
      </if>
      <if test="statusDate != null ">
        and STATUS_DATE = #{statusDate, jdbcType=TIMESTAMP }
      </if>
      <if test="effDate != null ">
        and EFF_DATE = #{effDate, jdbcType=TIMESTAMP }
      </if>
      <if test="expDate != null ">
        and EXP_DATE = #{expDate, jdbcType=TIMESTAMP }
      </if>
    </where>
  </sql>

  <select id="count" parameterType="com.neusoft.crm.api.cpc.prod.data.DepositDO" resultType="java.lang.Integer">
      select count(*) from DEPOSIT
    <if test="_parameter != null">
      <include refid="dynamicAndCondition"/>
    </if>
  </select>

  <select id="queryById" resultMap="BaseResultMap">
      select
    <include refid="CommonColumns"/>
        from DEPOSIT
        where 
           DEPOSIT_BALANCE_ID = #{depositBalanceId,jdbcType=BIGINT}
  </select>

  <select id="queryList" resultMap="BaseResultMap">
      select 
    <include refid="CommonColumns"/>
        from  DEPOSIT 
    <include refid="dynamicAndCondition"/>
    <choose>
      <when test="pageInfo != null and pageInfo.orderBy != null and pageInfo.orderBy != ''">
          ORDER BY ${pageInfo.orderBy} 
      </when>
    </choose>
  </select>

  <insert id="insertKey" useGeneratedKeys="true" keyProperty="depositBalanceId">
      insert into  DEPOSIT ( 
    <include refid="CommonColumnsKey"/>
       ) values ( 
        #{depositTypeId,jdbcType=INTEGER}, 
        #{acctId,jdbcType=BIGINT}, 
        #{prodInstId,jdbcType=BIGINT}, 
        #{oriAmount,jdbcType=BIGINT}, 
        #{amount,jdbcType=BIGINT}, 
        #{createDate,jdbcType=TIMESTAMP}, 
        #{allowPaeyDate,jdbcType=TIMESTAMP}, 
        #{bureauId,jdbcType=INTEGER}, 
        #{lanId,jdbcType=BIGINT}, 
        #{statusCd,jdbcType=INTEGER}, 
        #{statusDate,jdbcType=TIMESTAMP}, 
        #{effDate,jdbcType=TIMESTAMP}, 
        #{expDate,jdbcType=TIMESTAMP}
         )
  </insert>

  <insert id="insert">
      insert into  DEPOSIT ( 
    <include refid="CommonColumns"/>
       ) values ( 
        #{depositBalanceId,jdbcType=BIGINT}, 
        #{depositTypeId,jdbcType=INTEGER}, 
        #{acctId,jdbcType=BIGINT}, 
        #{prodInstId,jdbcType=BIGINT}, 
        #{oriAmount,jdbcType=BIGINT}, 
        #{amount,jdbcType=BIGINT}, 
        #{createDate,jdbcType=TIMESTAMP}, 
        #{allowPaeyDate,jdbcType=TIMESTAMP}, 
        #{bureauId,jdbcType=INTEGER}, 
        #{lanId,jdbcType=BIGINT}, 
        #{statusCd,jdbcType=INTEGER}, 
        #{statusDate,jdbcType=TIMESTAMP}, 
        #{effDate,jdbcType=TIMESTAMP}, 
        #{expDate,jdbcType=TIMESTAMP}
         )
  </insert>

  <delete id="deleteById" parameterType="java.lang.Long">
      delete from DEPOSIT  
        where
           DEPOSIT_BALANCE_ID = #{depositBalanceId,jdbcType=BIGINT}
  </delete>

  <delete id="delete">
      delete from DEPOSIT
    <if test="_parameter != null">
      <include refid="dynamicAndCondition"/>
    </if>
  </delete>

  <update id="updateById">
      update  DEPOSIT
    <trim prefix="set" suffixOverrides=",">
      <if test="depositTypeId != null">
         DEPOSIT_TYPE_ID = #{depositTypeId,jdbcType=INTEGER},
      </if>
      <if test="acctId != null">
         ACCT_ID = #{acctId,jdbcType=BIGINT},
      </if>
      <if test="prodInstId != null">
         PROD_INST_ID = #{prodInstId,jdbcType=BIGINT},
      </if>
      <if test="oriAmount != null">
         ORI_AMOUNT = #{oriAmount,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
         AMOUNT = #{amount,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
         CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="allowPaeyDate != null">
         ALLOW_PAEY_DATE = #{allowPaeyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bureauId != null">
         BUREAU_ID = #{bureauId,jdbcType=INTEGER},
      </if>
      <if test="lanId != null">
         LAN_ID = #{lanId,jdbcType=BIGINT},
      </if>
      <if test="statusCd != null">
         STATUS_CD = #{statusCd,jdbcType=INTEGER},
      </if>
      <if test="statusDate != null">
         STATUS_DATE = #{statusDate,jdbcType=TIMESTAMP},
      </if>
      <if test="effDate != null">
         EFF_DATE = #{effDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expDate != null">
         EXP_DATE = #{expDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
        where 
           DEPOSIT_BALANCE_ID = #{depositBalanceId,jdbcType=BIGINT}
  </update>

  <update id="updateBySelective">
      update DEPOSIT
    <trim prefix="set" suffixOverrides=",">
      <if test="record.depositBalanceId != null">
        DEPOSIT_BALANCE_ID = #{record.depositBalanceId,jdbcType=BIGINT},
      </if>
      <if test="record.depositTypeId != null">
        DEPOSIT_TYPE_ID = #{record.depositTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.acctId != null">
        ACCT_ID = #{record.acctId,jdbcType=BIGINT},
      </if>
      <if test="record.prodInstId != null">
        PROD_INST_ID = #{record.prodInstId,jdbcType=BIGINT},
      </if>
      <if test="record.oriAmount != null">
        ORI_AMOUNT = #{record.oriAmount,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allowPaeyDate != null">
        ALLOW_PAEY_DATE = #{record.allowPaeyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bureauId != null">
        BUREAU_ID = #{record.bureauId,jdbcType=INTEGER},
      </if>
      <if test="record.lanId != null">
        LAN_ID = #{record.lanId,jdbcType=BIGINT},
      </if>
      <if test="record.statusCd != null">
        STATUS_CD = #{record.statusCd,jdbcType=INTEGER},
      </if>
      <if test="record.statusDate != null">
        STATUS_DATE = #{record.statusDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effDate != null">
        EFF_DATE = #{record.effDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expDate != null">
        EXP_DATE = #{record.expDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <where>
      <if test="condition.depositBalanceId != null ">
        DEPOSIT_BALANCE_ID = #{condition.depositBalanceId, jdbcType=BIGINT }
      </if>
      <if test="condition.depositTypeId != null ">
        and DEPOSIT_TYPE_ID = #{condition.depositTypeId, jdbcType=INTEGER }
      </if>
      <if test="condition.acctId != null ">
        and ACCT_ID = #{condition.acctId, jdbcType=BIGINT }
      </if>
      <if test="condition.prodInstId != null ">
        and PROD_INST_ID = #{condition.prodInstId, jdbcType=BIGINT }
      </if>
      <if test="condition.oriAmount != null ">
        and ORI_AMOUNT = #{condition.oriAmount, jdbcType=BIGINT }
      </if>
      <if test="condition.amount != null ">
        and AMOUNT = #{condition.amount, jdbcType=BIGINT }
      </if>
      <if test="condition.createDate != null ">
        and CREATE_DATE = #{condition.createDate, jdbcType=TIMESTAMP }
      </if>
      <if test="condition.allowPaeyDate != null ">
        and ALLOW_PAEY_DATE = #{condition.allowPaeyDate, jdbcType=TIMESTAMP }
      </if>
      <if test="condition.bureauId != null ">
        and BUREAU_ID = #{condition.bureauId, jdbcType=INTEGER }
      </if>
      <if test="condition.lanId != null ">
        and LAN_ID = #{condition.lanId, jdbcType=BIGINT }
      </if>
      <if test="condition.statusCd != null ">
        and STATUS_CD = #{condition.statusCd, jdbcType=INTEGER }
      </if>
      <if test="condition.statusDate != null ">
        and STATUS_DATE = #{condition.statusDate, jdbcType=TIMESTAMP }
      </if>
      <if test="condition.effDate != null ">
        and EFF_DATE = #{condition.effDate, jdbcType=TIMESTAMP }
      </if>
      <if test="condition.expDate != null ">
        and EXP_DATE = #{condition.expDate, jdbcType=TIMESTAMP }
      </if>
    </where>
  </update>
</mapper>