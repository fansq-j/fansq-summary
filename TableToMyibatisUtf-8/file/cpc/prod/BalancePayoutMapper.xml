<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="com.neusoft.crm.cpc.prod.mapper.BalancePayoutMapper">

  <resultMap id="BaseResultMap" type="com.neusoft.crm.api.cpc.prod.data.BalancePayoutDO">
    <id column="OPER_PAYOUT_ID" jdbcType="BIGINT" property="operPayoutId"/>
    <result column="BILL_ID" jdbcType="BIGINT" property="billId"/>
    <result column="PAYMENT_ID" jdbcType="BIGINT" property="paymentId"/>
    <result column="OPER_TYPE" jdbcType="VARCHAR" property="operType"/>
    <result column="ACCT_BALANCE_ID" jdbcType="BIGINT" property="acctBalanceId"/>
    <result column="AMOUNT" jdbcType="BIGINT" property="amount"/>
    <result column="BALANCE" jdbcType="BIGINT" property="balance"/>
    <result column="EXT_SERIAL_ID" jdbcType="VARCHAR" property="extSerialId"/>
    <result column="STAFF_ID" jdbcType="BIGINT" property="staffId"/>
    <result column="ORG_ID" jdbcType="BIGINT" property="orgId"/>
    <result column="OPER_DATE" jdbcType="TIMESTAMP" property="operDate"/>
    <result column="PRN_COUNT" jdbcType="INTEGER" property="prnCount"/>
    <result column="BALANCE_RELATION_ID" jdbcType="BIGINT" property="balanceRelationId"/>
    <result column="PAYOUT_DESC" jdbcType="VARCHAR" property="payoutDesc"/>
    <result column="STATUS_CD" jdbcType="INTEGER" property="statusCd"/>
    <result column="STATUS_DATE" jdbcType="TIMESTAMP" property="statusDate"/>
  </resultMap>

  <sql id="CommonColumns">
          OPER_PAYOUT_ID, 
          BILL_ID, 
          PAYMENT_ID, 
          OPER_TYPE, 
          ACCT_BALANCE_ID, 
          AMOUNT, 
          BALANCE, 
          EXT_SERIAL_ID, 
          STAFF_ID, 
          ORG_ID, 
          OPER_DATE, 
          PRN_COUNT, 
          BALANCE_RELATION_ID, 
          PAYOUT_DESC, 
          STATUS_CD, 
          STATUS_DATE
  </sql>

  <sql id="CommonColumnsKey">
          BILL_ID, 
          PAYMENT_ID, 
          OPER_TYPE, 
          ACCT_BALANCE_ID, 
          AMOUNT, 
          BALANCE, 
          EXT_SERIAL_ID, 
          STAFF_ID, 
          ORG_ID, 
          OPER_DATE, 
          PRN_COUNT, 
          BALANCE_RELATION_ID, 
          PAYOUT_DESC, 
          STATUS_CD, 
          STATUS_DATE
  </sql>

  <sql id="dynamicAndCondition">
    <where>
      <if test="operPayoutId != null ">
        OPER_PAYOUT_ID = #{operPayoutId, jdbcType=BIGINT }
      </if>
      <if test="billId != null ">
        and BILL_ID = #{billId, jdbcType=BIGINT }
      </if>
      <if test="paymentId != null ">
        and PAYMENT_ID = #{paymentId, jdbcType=BIGINT }
      </if>
      <if test="operType != null and operType != ''">
        and OPER_TYPE = #{operType, jdbcType=VARCHAR }
      </if>
      <if test="acctBalanceId != null ">
        and ACCT_BALANCE_ID = #{acctBalanceId, jdbcType=BIGINT }
      </if>
      <if test="amount != null ">
        and AMOUNT = #{amount, jdbcType=BIGINT }
      </if>
      <if test="balance != null ">
        and BALANCE = #{balance, jdbcType=BIGINT }
      </if>
      <if test="extSerialId != null and extSerialId != ''">
        and EXT_SERIAL_ID = #{extSerialId, jdbcType=VARCHAR }
      </if>
      <if test="staffId != null ">
        and STAFF_ID = #{staffId, jdbcType=BIGINT }
      </if>
      <if test="orgId != null ">
        and ORG_ID = #{orgId, jdbcType=BIGINT }
      </if>
      <if test="operDate != null ">
        and OPER_DATE = #{operDate, jdbcType=TIMESTAMP }
      </if>
      <if test="prnCount != null ">
        and PRN_COUNT = #{prnCount, jdbcType=INTEGER }
      </if>
      <if test="balanceRelationId != null ">
        and BALANCE_RELATION_ID = #{balanceRelationId, jdbcType=BIGINT }
      </if>
      <if test="payoutDesc != null and payoutDesc != ''">
        and PAYOUT_DESC = #{payoutDesc, jdbcType=VARCHAR }
      </if>
      <if test="statusCd != null ">
        and STATUS_CD = #{statusCd, jdbcType=INTEGER }
      </if>
      <if test="statusDate != null ">
        and STATUS_DATE = #{statusDate, jdbcType=TIMESTAMP }
      </if>
    </where>
  </sql>

  <select id="count" parameterType="com.neusoft.crm.api.cpc.prod.data.BalancePayoutDO" resultType="java.lang.Integer">
      select count(*) from BALANCE_PAYOUT
    <if test="_parameter != null">
      <include refid="dynamicAndCondition"/>
    </if>
  </select>

  <select id="queryById" resultMap="BaseResultMap">
      select
    <include refid="CommonColumns"/>
        from BALANCE_PAYOUT
        where 
           OPER_PAYOUT_ID = #{operPayoutId,jdbcType=BIGINT}
  </select>

  <select id="queryList" resultMap="BaseResultMap">
      select 
    <include refid="CommonColumns"/>
        from  BALANCE_PAYOUT 
    <include refid="dynamicAndCondition"/>
    <choose>
      <when test="pageInfo != null and pageInfo.orderBy != null and pageInfo.orderBy != ''">
          ORDER BY ${pageInfo.orderBy} 
      </when>
    </choose>
  </select>

  <insert id="insertKey" useGeneratedKeys="true" keyProperty="operPayoutId">
      insert into  BALANCE_PAYOUT ( 
    <include refid="CommonColumnsKey"/>
       ) values ( 
        #{billId,jdbcType=BIGINT}, 
        #{paymentId,jdbcType=BIGINT}, 
        #{operType,jdbcType=VARCHAR}, 
        #{acctBalanceId,jdbcType=BIGINT}, 
        #{amount,jdbcType=BIGINT}, 
        #{balance,jdbcType=BIGINT}, 
        #{extSerialId,jdbcType=VARCHAR}, 
        #{staffId,jdbcType=BIGINT}, 
        #{orgId,jdbcType=BIGINT}, 
        #{operDate,jdbcType=TIMESTAMP}, 
        #{prnCount,jdbcType=INTEGER}, 
        #{balanceRelationId,jdbcType=BIGINT}, 
        #{payoutDesc,jdbcType=VARCHAR}, 
        #{statusCd,jdbcType=INTEGER}, 
        #{statusDate,jdbcType=TIMESTAMP}
         )
  </insert>

  <insert id="insert">
      insert into  BALANCE_PAYOUT ( 
    <include refid="CommonColumns"/>
       ) values ( 
        #{operPayoutId,jdbcType=BIGINT}, 
        #{billId,jdbcType=BIGINT}, 
        #{paymentId,jdbcType=BIGINT}, 
        #{operType,jdbcType=VARCHAR}, 
        #{acctBalanceId,jdbcType=BIGINT}, 
        #{amount,jdbcType=BIGINT}, 
        #{balance,jdbcType=BIGINT}, 
        #{extSerialId,jdbcType=VARCHAR}, 
        #{staffId,jdbcType=BIGINT}, 
        #{orgId,jdbcType=BIGINT}, 
        #{operDate,jdbcType=TIMESTAMP}, 
        #{prnCount,jdbcType=INTEGER}, 
        #{balanceRelationId,jdbcType=BIGINT}, 
        #{payoutDesc,jdbcType=VARCHAR}, 
        #{statusCd,jdbcType=INTEGER}, 
        #{statusDate,jdbcType=TIMESTAMP}
         )
  </insert>

  <delete id="deleteById" parameterType="java.lang.Long">
      delete from BALANCE_PAYOUT  
        where
           OPER_PAYOUT_ID = #{operPayoutId,jdbcType=BIGINT}
  </delete>

  <delete id="delete">
      delete from BALANCE_PAYOUT
    <if test="_parameter != null">
      <include refid="dynamicAndCondition"/>
    </if>
  </delete>

  <update id="updateById">
      update  BALANCE_PAYOUT
    <trim prefix="set" suffixOverrides=",">
      <if test="billId != null">
         BILL_ID = #{billId,jdbcType=BIGINT},
      </if>
      <if test="paymentId != null">
         PAYMENT_ID = #{paymentId,jdbcType=BIGINT},
      </if>
      <if test="operType != null">
         OPER_TYPE = #{operType,jdbcType=VARCHAR},
      </if>
      <if test="acctBalanceId != null">
         ACCT_BALANCE_ID = #{acctBalanceId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
         AMOUNT = #{amount,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
         BALANCE = #{balance,jdbcType=BIGINT},
      </if>
      <if test="extSerialId != null">
         EXT_SERIAL_ID = #{extSerialId,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null">
         STAFF_ID = #{staffId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null">
         ORG_ID = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="operDate != null">
         OPER_DATE = #{operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="prnCount != null">
         PRN_COUNT = #{prnCount,jdbcType=INTEGER},
      </if>
      <if test="balanceRelationId != null">
         BALANCE_RELATION_ID = #{balanceRelationId,jdbcType=BIGINT},
      </if>
      <if test="payoutDesc != null">
         PAYOUT_DESC = #{payoutDesc,jdbcType=VARCHAR},
      </if>
      <if test="statusCd != null">
         STATUS_CD = #{statusCd,jdbcType=INTEGER},
      </if>
      <if test="statusDate != null">
         STATUS_DATE = #{statusDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
        where 
           OPER_PAYOUT_ID = #{operPayoutId,jdbcType=BIGINT}
  </update>

  <update id="updateBySelective">
      update BALANCE_PAYOUT
    <trim prefix="set" suffixOverrides=",">
      <if test="record.operPayoutId != null">
        OPER_PAYOUT_ID = #{record.operPayoutId,jdbcType=BIGINT},
      </if>
      <if test="record.billId != null">
        BILL_ID = #{record.billId,jdbcType=BIGINT},
      </if>
      <if test="record.paymentId != null">
        PAYMENT_ID = #{record.paymentId,jdbcType=BIGINT},
      </if>
      <if test="record.operType != null">
        OPER_TYPE = #{record.operType,jdbcType=VARCHAR},
      </if>
      <if test="record.acctBalanceId != null">
        ACCT_BALANCE_ID = #{record.acctBalanceId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.balance != null">
        BALANCE = #{record.balance,jdbcType=BIGINT},
      </if>
      <if test="record.extSerialId != null">
        EXT_SERIAL_ID = #{record.extSerialId,jdbcType=VARCHAR},
      </if>
      <if test="record.staffId != null">
        STAFF_ID = #{record.staffId,jdbcType=BIGINT},
      </if>
      <if test="record.orgId != null">
        ORG_ID = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.operDate != null">
        OPER_DATE = #{record.operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.prnCount != null">
        PRN_COUNT = #{record.prnCount,jdbcType=INTEGER},
      </if>
      <if test="record.balanceRelationId != null">
        BALANCE_RELATION_ID = #{record.balanceRelationId,jdbcType=BIGINT},
      </if>
      <if test="record.payoutDesc != null">
        PAYOUT_DESC = #{record.payoutDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.statusCd != null">
        STATUS_CD = #{record.statusCd,jdbcType=INTEGER},
      </if>
      <if test="record.statusDate != null">
        STATUS_DATE = #{record.statusDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <where>
      <if test="condition.operPayoutId != null ">
        OPER_PAYOUT_ID = #{condition.operPayoutId, jdbcType=BIGINT }
      </if>
      <if test="condition.billId != null ">
        and BILL_ID = #{condition.billId, jdbcType=BIGINT }
      </if>
      <if test="condition.paymentId != null ">
        and PAYMENT_ID = #{condition.paymentId, jdbcType=BIGINT }
      </if>
      <if test="condition.operType != null and condition.operType != ''">
        and OPER_TYPE = #{condition.operType, jdbcType=VARCHAR }
      </if>
      <if test="condition.acctBalanceId != null ">
        and ACCT_BALANCE_ID = #{condition.acctBalanceId, jdbcType=BIGINT }
      </if>
      <if test="condition.amount != null ">
        and AMOUNT = #{condition.amount, jdbcType=BIGINT }
      </if>
      <if test="condition.balance != null ">
        and BALANCE = #{condition.balance, jdbcType=BIGINT }
      </if>
      <if test="condition.extSerialId != null and condition.extSerialId != ''">
        and EXT_SERIAL_ID = #{condition.extSerialId, jdbcType=VARCHAR }
      </if>
      <if test="condition.staffId != null ">
        and STAFF_ID = #{condition.staffId, jdbcType=BIGINT }
      </if>
      <if test="condition.orgId != null ">
        and ORG_ID = #{condition.orgId, jdbcType=BIGINT }
      </if>
      <if test="condition.operDate != null ">
        and OPER_DATE = #{condition.operDate, jdbcType=TIMESTAMP }
      </if>
      <if test="condition.prnCount != null ">
        and PRN_COUNT = #{condition.prnCount, jdbcType=INTEGER }
      </if>
      <if test="condition.balanceRelationId != null ">
        and BALANCE_RELATION_ID = #{condition.balanceRelationId, jdbcType=BIGINT }
      </if>
      <if test="condition.payoutDesc != null and condition.payoutDesc != ''">
        and PAYOUT_DESC = #{condition.payoutDesc, jdbcType=VARCHAR }
      </if>
      <if test="condition.statusCd != null ">
        and STATUS_CD = #{condition.statusCd, jdbcType=INTEGER }
      </if>
      <if test="condition.statusDate != null ">
        and STATUS_DATE = #{condition.statusDate, jdbcType=TIMESTAMP }
      </if>
    </where>
  </update>
</mapper>