<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="com.neusoft.crm.cpc.prod.mapper.BillingCycleTypeMapper">

  <resultMap id="BaseResultMap" type="com.neusoft.crm.api.cpc.prod.data.BillingCycleTypeDO">
    <id column="BILLING_CYCLE_TYPE_ID" jdbcType="INTEGER" property="billingCycleTypeId"/>
    <result column="BILLING_CYCLE_TYPE_NAME" jdbcType="VARCHAR" property="billingCycleTypeName"/>
    <result column="CYCLE_UNIT" jdbcType="INTEGER" property="cycleUnit"/>
    <result column="UNIT_COUNT" jdbcType="INTEGER" property="unitCount"/>
    <result column="CYCLE_DURATION" jdbcType="INTEGER" property="cycleDuration"/>
    <result column="CYCLE_DURATION_DAYS" jdbcType="INTEGER" property="cycleDurationDays"/>
    <result column="STATUS_CD" jdbcType="VARCHAR" property="statusCd"/>
    <result column="CREATE_STAFF" jdbcType="BIGINT" property="createStaff"/>
    <result column="UPDATE_STAFF" jdbcType="BIGINT" property="updateStaff"/>
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
    <result column="STATUS_DATE" jdbcType="TIMESTAMP" property="statusDate"/>
  </resultMap>

  <sql id="CommonColumns">
          BILLING_CYCLE_TYPE_ID, 
          BILLING_CYCLE_TYPE_NAME, 
          CYCLE_UNIT, 
          UNIT_COUNT, 
          CYCLE_DURATION, 
          CYCLE_DURATION_DAYS, 
          STATUS_CD, 
          CREATE_STAFF, 
          UPDATE_STAFF, 
          CREATE_DATE, 
          UPDATE_DATE, 
          STATUS_DATE
  </sql>

  <sql id="CommonColumnsKey">
          BILLING_CYCLE_TYPE_NAME, 
          CYCLE_UNIT, 
          UNIT_COUNT, 
          CYCLE_DURATION, 
          CYCLE_DURATION_DAYS, 
          STATUS_CD, 
          CREATE_STAFF, 
          UPDATE_STAFF, 
          CREATE_DATE, 
          UPDATE_DATE, 
          STATUS_DATE
  </sql>

  <sql id="dynamicAndCondition">
    <where>
      <if test="billingCycleTypeId != null ">
        BILLING_CYCLE_TYPE_ID = #{billingCycleTypeId, jdbcType=INTEGER }
      </if>
      <if test="billingCycleTypeName != null and billingCycleTypeName != ''">
        and BILLING_CYCLE_TYPE_NAME = #{billingCycleTypeName, jdbcType=VARCHAR }
      </if>
      <if test="cycleUnit != null ">
        and CYCLE_UNIT = #{cycleUnit, jdbcType=INTEGER }
      </if>
      <if test="unitCount != null ">
        and UNIT_COUNT = #{unitCount, jdbcType=INTEGER }
      </if>
      <if test="cycleDuration != null ">
        and CYCLE_DURATION = #{cycleDuration, jdbcType=INTEGER }
      </if>
      <if test="cycleDurationDays != null ">
        and CYCLE_DURATION_DAYS = #{cycleDurationDays, jdbcType=INTEGER }
      </if>
      <if test="statusCd != null and statusCd != ''">
        and STATUS_CD = #{statusCd, jdbcType=VARCHAR }
      </if>
      <if test="createStaff != null ">
        and CREATE_STAFF = #{createStaff, jdbcType=BIGINT }
      </if>
      <if test="updateStaff != null ">
        and UPDATE_STAFF = #{updateStaff, jdbcType=BIGINT }
      </if>
      <if test="createDate != null ">
        and CREATE_DATE = #{createDate, jdbcType=TIMESTAMP }
      </if>
      <if test="updateDate != null ">
        and UPDATE_DATE = #{updateDate, jdbcType=TIMESTAMP }
      </if>
      <if test="statusDate != null ">
        and STATUS_DATE = #{statusDate, jdbcType=TIMESTAMP }
      </if>
    </where>
  </sql>

  <select id="count" parameterType="com.neusoft.crm.api.cpc.prod.data.BillingCycleTypeDO" resultType="java.lang.Integer">
      select count(*) from BILLING_CYCLE_TYPE
    <if test="_parameter != null">
      <include refid="dynamicAndCondition"/>
    </if>
  </select>

  <select id="queryById" resultMap="BaseResultMap">
      select
    <include refid="CommonColumns"/>
        from BILLING_CYCLE_TYPE
        where 
           BILLING_CYCLE_TYPE_ID = #{billingCycleTypeId,jdbcType=INTEGER}
  </select>

  <select id="queryList" resultMap="BaseResultMap">
      select 
    <include refid="CommonColumns"/>
        from  BILLING_CYCLE_TYPE 
    <include refid="dynamicAndCondition"/>
    <choose>
      <when test="pageInfo != null and pageInfo.orderBy != null and pageInfo.orderBy != ''">
          ORDER BY ${pageInfo.orderBy} 
      </when>
    </choose>
  </select>

  <insert id="insertKey" useGeneratedKeys="true" keyProperty="billingCycleTypeId">
      insert into  BILLING_CYCLE_TYPE ( 
    <include refid="CommonColumnsKey"/>
       ) values ( 
        #{billingCycleTypeName,jdbcType=VARCHAR}, 
        #{cycleUnit,jdbcType=INTEGER}, 
        #{unitCount,jdbcType=INTEGER}, 
        #{cycleDuration,jdbcType=INTEGER}, 
        #{cycleDurationDays,jdbcType=INTEGER}, 
        #{statusCd,jdbcType=VARCHAR}, 
        #{createStaff,jdbcType=BIGINT}, 
        #{updateStaff,jdbcType=BIGINT}, 
        #{createDate,jdbcType=TIMESTAMP}, 
        #{updateDate,jdbcType=TIMESTAMP}, 
        #{statusDate,jdbcType=TIMESTAMP}
         )
  </insert>

  <insert id="insert">
      insert into  BILLING_CYCLE_TYPE ( 
    <include refid="CommonColumns"/>
       ) values ( 
        #{billingCycleTypeId,jdbcType=INTEGER}, 
        #{billingCycleTypeName,jdbcType=VARCHAR}, 
        #{cycleUnit,jdbcType=INTEGER}, 
        #{unitCount,jdbcType=INTEGER}, 
        #{cycleDuration,jdbcType=INTEGER}, 
        #{cycleDurationDays,jdbcType=INTEGER}, 
        #{statusCd,jdbcType=VARCHAR}, 
        #{createStaff,jdbcType=BIGINT}, 
        #{updateStaff,jdbcType=BIGINT}, 
        #{createDate,jdbcType=TIMESTAMP}, 
        #{updateDate,jdbcType=TIMESTAMP}, 
        #{statusDate,jdbcType=TIMESTAMP}
         )
  </insert>

  <delete id="deleteById" parameterType="java.lang.Long">
      delete from BILLING_CYCLE_TYPE  
        where
           BILLING_CYCLE_TYPE_ID = #{billingCycleTypeId,jdbcType=INTEGER}
  </delete>

  <delete id="delete">
      delete from BILLING_CYCLE_TYPE
    <if test="_parameter != null">
      <include refid="dynamicAndCondition"/>
    </if>
  </delete>

  <update id="updateById">
      update  BILLING_CYCLE_TYPE
    <trim prefix="set" suffixOverrides=",">
      <if test="billingCycleTypeName != null">
         BILLING_CYCLE_TYPE_NAME = #{billingCycleTypeName,jdbcType=VARCHAR},
      </if>
      <if test="cycleUnit != null">
         CYCLE_UNIT = #{cycleUnit,jdbcType=INTEGER},
      </if>
      <if test="unitCount != null">
         UNIT_COUNT = #{unitCount,jdbcType=INTEGER},
      </if>
      <if test="cycleDuration != null">
         CYCLE_DURATION = #{cycleDuration,jdbcType=INTEGER},
      </if>
      <if test="cycleDurationDays != null">
         CYCLE_DURATION_DAYS = #{cycleDurationDays,jdbcType=INTEGER},
      </if>
      <if test="statusCd != null">
         STATUS_CD = #{statusCd,jdbcType=VARCHAR},
      </if>
      <if test="createStaff != null">
         CREATE_STAFF = #{createStaff,jdbcType=BIGINT},
      </if>
      <if test="updateStaff != null">
         UPDATE_STAFF = #{updateStaff,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
         CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
         UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="statusDate != null">
         STATUS_DATE = #{statusDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
        where 
           BILLING_CYCLE_TYPE_ID = #{billingCycleTypeId,jdbcType=INTEGER}
  </update>

  <update id="updateBySelective">
      update BILLING_CYCLE_TYPE
    <trim prefix="set" suffixOverrides=",">
      <if test="record.billingCycleTypeId != null">
        BILLING_CYCLE_TYPE_ID = #{record.billingCycleTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.billingCycleTypeName != null">
        BILLING_CYCLE_TYPE_NAME = #{record.billingCycleTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.cycleUnit != null">
        CYCLE_UNIT = #{record.cycleUnit,jdbcType=INTEGER},
      </if>
      <if test="record.unitCount != null">
        UNIT_COUNT = #{record.unitCount,jdbcType=INTEGER},
      </if>
      <if test="record.cycleDuration != null">
        CYCLE_DURATION = #{record.cycleDuration,jdbcType=INTEGER},
      </if>
      <if test="record.cycleDurationDays != null">
        CYCLE_DURATION_DAYS = #{record.cycleDurationDays,jdbcType=INTEGER},
      </if>
      <if test="record.statusCd != null">
        STATUS_CD = #{record.statusCd,jdbcType=VARCHAR},
      </if>
      <if test="record.createStaff != null">
        CREATE_STAFF = #{record.createStaff,jdbcType=BIGINT},
      </if>
      <if test="record.updateStaff != null">
        UPDATE_STAFF = #{record.updateStaff,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statusDate != null">
        STATUS_DATE = #{record.statusDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <where>
      <if test="condition.billingCycleTypeId != null ">
        BILLING_CYCLE_TYPE_ID = #{condition.billingCycleTypeId, jdbcType=INTEGER }
      </if>
      <if test="condition.billingCycleTypeName != null and condition.billingCycleTypeName != ''">
        and BILLING_CYCLE_TYPE_NAME = #{condition.billingCycleTypeName, jdbcType=VARCHAR }
      </if>
      <if test="condition.cycleUnit != null ">
        and CYCLE_UNIT = #{condition.cycleUnit, jdbcType=INTEGER }
      </if>
      <if test="condition.unitCount != null ">
        and UNIT_COUNT = #{condition.unitCount, jdbcType=INTEGER }
      </if>
      <if test="condition.cycleDuration != null ">
        and CYCLE_DURATION = #{condition.cycleDuration, jdbcType=INTEGER }
      </if>
      <if test="condition.cycleDurationDays != null ">
        and CYCLE_DURATION_DAYS = #{condition.cycleDurationDays, jdbcType=INTEGER }
      </if>
      <if test="condition.statusCd != null and condition.statusCd != ''">
        and STATUS_CD = #{condition.statusCd, jdbcType=VARCHAR }
      </if>
      <if test="condition.createStaff != null ">
        and CREATE_STAFF = #{condition.createStaff, jdbcType=BIGINT }
      </if>
      <if test="condition.updateStaff != null ">
        and UPDATE_STAFF = #{condition.updateStaff, jdbcType=BIGINT }
      </if>
      <if test="condition.createDate != null ">
        and CREATE_DATE = #{condition.createDate, jdbcType=TIMESTAMP }
      </if>
      <if test="condition.updateDate != null ">
        and UPDATE_DATE = #{condition.updateDate, jdbcType=TIMESTAMP }
      </if>
      <if test="condition.statusDate != null ">
        and STATUS_DATE = #{condition.statusDate, jdbcType=TIMESTAMP }
      </if>
    </where>
  </update>
</mapper>